void setup_UART()
{
  //Comport List Selection                   
  commListbox = cp5.addListBox("portComList", 5, 85, 110, 240); // make a listbox and populate it with the available comm ports

  commListbox.setLabel("PORT COM");
  commListbox.setColorBackground(red_);

  for (int i=0; i<Serial.list ().length; i++) 
  {

    String pn = shortifyPortName(Serial.list()[i], 13);
    if (pn.length() >0 ) commListbox.addItem(pn, i); // addItem(name,value)
    commListMax = i;
  }

  commListbox.addItem("Close Comm", ++commListMax); // addItem(name,value)
  // text label for which comm port selected
  txtlblWhichcom = cp5.addTextlabel("txtlblWhichcom", "No Port Selected", 5, 62); // textlabel(name,text,x,y)
}

void setDeg()
{

  byte out[]=new byte[18];
  out[0]=byte(255);
  out[1]=byte(int(ser0H));
  out[2]=byte(int(ser0L));
  out[3]=byte(int(ser1H));
  out[4]=byte(int(ser1L));
  out[5]=byte(int(ser2H));
  out[6]=byte(int(ser2L));
  out[7]=byte(int(ser3H));
  out[8]=byte(int(ser3L));
  out[9]=byte(int(ser4H));
  out[10]=byte(int(ser4L));

  if (speed==true) {
    out[11]=byte(int(spd0));
    out[12]=byte(int(spd1));
    out[13]=byte(int(spd2));
    out[14]=byte(int(spd3));
    out[15]=byte(int(spd4));
  } else {
    out[11]=byte(30);
    out[12]=byte(30);
    out[13]=byte(30);
    out[14]=byte(30);
    out[15]=byte(30);
  }

  if (torque==true) {
    out[16]=byte(147);
  } else {
    out[16]=byte(133);
  }

  out[17]=byte(254);

  serial.write(out);
}


void Send_To_Arduino()
{

  if (serial_conect==1) 
  {  
    if (statustab==1) //TAB MAIN 
    {
      //indicator connect
      fill(0, 255, 0);
      ellipse(100, 67, 10, 10);
      noFill();
    }

    if (setOn==true) { //TuningPID
      setDeg();
    }
  } else 
  {//indicator no connect
    if (statustab==1) //TAB MAIN 
    {
      fill(128, 0, 0);
      ellipse(100, 67, 10, 10);
      noFill();
    }
  }
}


void serialEvent (Serial usbPort) 
{
  try {
    String usbString = usbPort.readStringUntil ('\n');

    if (usbString != null) 
    {
      usbString = trim(usbString);
      println(usbString); //--> for debuging
    }

    float data[] = float(split(usbString, ','));
    //for (int sensorNum = 1; sensorNum < data.length; sensorNum++) { println(sensorNum + " " + data[sensorNum]);  } //--> for debuging

      deg0=data[1];
    deg1=data[2];
    deg2=data[3];
    deg3=data[4];
    deg4=data[5];
    temp0=data[6];
    temp1=data[7];
    temp2=data[8];
    temp3=data[9];
    temp4=data[10];
    volt0=data[11];
    volt1=data[12];
    volt2=data[13];
    volt3=data[14];
    volt4=data[15];
    cur0=data[16];
    cur1=data[17];
    cur2=data[18];
    cur3=data[19];
    cur4=data[20];
    angy=data[21];
    angx=data[22];
  }
  catch(RuntimeException e)
  {
    println("Serial event is not null");
  }
}


//initialize the serial port selected in the listBox
void InitSerial(float portValue) 
{
  if (portValue < commListMax) {
    String portPos = Serial.list()[int(portValue)];
    txtlblWhichcom.setValue("Connected = " + shortifyPortName(portPos, 8));
    serial = new Serial(this, portPos, 115200);
    serial.bufferUntil('\n');
    serial_conect=1;
  } else 
  {
    txtlblWhichcom.setValue("Not Connected");
    serial.clear();
    serial.stop();
    serial_conect=0;
  }
}

void controlEvent(ControlEvent theControlEvent)
{


  if (theControlEvent.isGroup()) if (theControlEvent.getName()=="portComList") InitSerial(theControlEvent.getValue()); // initialize the serial port selected

  if (theControlEvent.isTab()) {
    //println("got an event from tab : "+theControlEvent.getTab().getName()+" with id "+theControlEvent.getTab().getId());
    statustab=theControlEvent.getTab().getId(); 
    //    println("statustab:"+statustab);
  }
}